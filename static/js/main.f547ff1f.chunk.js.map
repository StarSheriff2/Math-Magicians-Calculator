{"version":3,"sources":["components/display.js","components/otherOperations.js","components/digits.js","components/operators.js","components/equal.js","logic/operate.js","logic/calculate.js","components/Calculator.js","App.js","reportWebVitals.js","index.js"],"names":["isNull","prop","current","total","next","Display","props","className","defaultProps","OtherOperations","handleClick","e","target","value","onClick","type","Digits","Operators","Equal","operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","div","mod","Error","calculate","obj","buttonName","match","includes","parseFloat","Calculator","initialObj","useState","state","setState","status","error","setError","updateState","newState","actualState","useEffect","output","savedInput","err","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAGMA,EAAS,SAACC,GACd,OAAKA,GACI,KAKLC,EAAU,SAACC,EAAOC,GACtB,OAAID,GAASC,EACJJ,EAAOI,GAEZD,GAGGH,EAAOI,IAGVC,EAAU,SAACC,GAAW,IAClBH,EAAgBG,EAAhBH,MAAOC,EAASE,EAATF,KAEf,OACE,qBAAKG,UAAU,oBAAf,SACE,mBAAGA,UAAU,kBAAb,SAAiCL,EAAQC,EAAOC,QAKtDC,EAAQG,aAAe,CACrBL,MAAO,KACPC,KAAM,MAQOC,QCrCTI,EAAkB,SAACH,GACvB,IAAMI,EAAc,SAACC,GAAO,IAClBD,EAAgBJ,EAAhBI,YACRA,EAAYC,EAAEC,OAAOC,QAGvB,OACE,sBAAKN,UAAU,6BAAf,UACE,wBAAQO,QAASJ,EAAaK,KAAK,SAASR,UAAU,2BAA2BM,MAAM,KAAvF,gBACA,wBAAQC,QAASJ,EAAaK,KAAK,SAASR,UAAU,2BAA2BM,MAAM,MAAvF,mBACA,wBAAQC,QAASJ,EAAaK,KAAK,SAASR,UAAU,2BAA2BM,MAAM,IAAvF,mBAONJ,EAAgBD,aAAe,CAAEE,YAAa,MAE/BD,QCnBTO,EAAS,SAACV,GACd,IAAMI,EAAc,SAACC,GAAO,IAClBD,EAAgBJ,EAAhBI,YACRA,EAAYC,EAAEC,OAAOC,QAGvB,OACE,sBAAKN,UAAU,mBAAf,UACE,wBAAQO,QAASJ,EAAaK,KAAK,SAASR,UAAU,iBAAiBM,MAAM,IAA7E,eACA,wBAAQC,QAASJ,EAAaK,KAAK,SAASR,UAAU,iBAAiBM,MAAM,IAA7E,eACA,wBAAQC,QAASJ,EAAaK,KAAK,SAASR,UAAU,iBAAiBM,MAAM,IAA7E,eACA,wBAAQC,QAASJ,EAAaK,KAAK,SAASR,UAAU,iBAAiBM,MAAM,IAA7E,eACA,wBAAQC,QAASJ,EAAaK,KAAK,SAASR,UAAU,iBAAiBM,MAAM,IAA7E,eACA,wBAAQC,QAASJ,EAAaK,KAAK,SAASR,UAAU,iBAAiBM,MAAM,IAA7E,eACA,wBAAQC,QAASJ,EAAaK,KAAK,SAASR,UAAU,iBAAiBM,MAAM,IAA7E,eACA,wBAAQC,QAASJ,EAAaK,KAAK,SAASR,UAAU,iBAAiBM,MAAM,IAA7E,eACA,wBAAQC,QAASJ,EAAaK,KAAK,SAASR,UAAU,iBAAiBM,MAAM,IAA7E,eACA,wBAAQC,QAASJ,EAAaK,KAAK,SAASR,UAAU,0BAA0BM,MAAM,IAAtF,eACA,wBAAQC,QAASJ,EAAaK,KAAK,SAASR,UAAU,iBAAiBM,MAAM,IAA7E,mBAONG,EAAOR,aAAe,CAAEE,YAAa,MAEtBM,QC3BTC,EAAY,SAACX,GACjB,IAAMI,EAAc,SAACC,GAAO,IAClBD,EAAgBJ,EAAhBI,YACRA,EAAYC,EAAEC,OAAOC,QAGvB,OACE,sBAAKN,UAAU,sBAAf,UACE,wBAAQO,QAASJ,EAAaK,KAAK,SAASR,UAAU,oBAAoBM,MAAM,OAAhF,kBACA,wBAAQC,QAASJ,EAAaK,KAAK,SAASR,UAAU,oBAAoBM,MAAM,IAAhF,kBACA,wBAAQC,QAASJ,EAAaK,KAAK,SAASR,UAAU,oBAAoBM,MAAM,IAAhF,oBACA,wBAAQC,QAASJ,EAAaK,KAAK,SAASR,UAAU,oBAAoBM,MAAM,IAAhF,mBAONI,EAAUT,aAAe,CAAEE,YAAa,MAEzBO,QCpBTC,EAAQ,SAACZ,GAMb,OACE,qBAAKC,UAAU,kBAAf,SACE,wBAAQO,QAPQ,SAACH,GAAO,IAClBD,EAAgBJ,EAAhBI,YACRA,EAAYC,EAAEC,OAAOC,QAKWE,KAAK,SAASR,UAAU,gBAAgBM,MAAM,IAA5E,kBAONK,EAAMV,aAAe,CAAEE,YAAa,MAErBQ,Q,gBClBA,SAASC,EAAQC,EAAWC,EAAWC,GACpD,IAAMC,EAAMC,IAAIJ,GACVK,EAAMD,IAAIH,GAChB,GAAkB,MAAdC,EACF,OAAOC,EAAIG,KAAKD,GAAKE,WAEvB,GAAkB,MAAdL,EACF,OAAOC,EAAIK,MAAMH,GAAKE,WAExB,GAAkB,MAAdL,EACF,OAAOC,EAAIM,MAAMJ,GAAKE,WAExB,GAAkB,SAAdL,EACF,OAAOC,EAAIO,IAAIL,GAAKE,WAEtB,GAAkB,MAAdL,EACF,OAAOC,EAAIQ,IAAIN,GAAKE,WAEtB,MAAMK,MAAM,sBAAD,OAAuBV,EAAvB,MCLE,SAASW,EAAUC,EAAKC,GACrC,MAAmB,OAAfA,EACK,CACLhC,MAAO,KACPC,KAAM,KACNkB,UAAW,MAIFa,EArBCC,MAAM,UAsBC,MAAfD,GAAmC,MAAbD,EAAI9B,KACrB,GAGL8B,EAAIZ,UACFY,EAAI9B,KACC,CAAEA,KAAM8B,EAAI9B,KAAO+B,GAErB,CAAE/B,KAAM+B,GAGbD,EAAI9B,KACC,CACLA,KAAM8B,EAAI9B,KAAO+B,EACjBhC,MAAO,MAGJ,CACLC,KAAM+B,EACNhC,MAAO,MAIQ,MAAfgC,EACED,EAAI9B,KACF8B,EAAI9B,KAAKiC,SAAS,KACb,GAEF,CAAEjC,KAAK,GAAD,OAAK8B,EAAI9B,KAAT,MAEX8B,EAAIZ,UACC,CAAElB,KAAM,MAEb8B,EAAI/B,MACF+B,EAAI/B,MAAMkC,SAAS,KACd,GAEF,CAAElC,MAAM,GAAD,OAAK+B,EAAI/B,MAAT,MAET,CAAEA,MAAO,MAGC,MAAfgC,EACED,EAAI9B,MAAQ8B,EAAIZ,UACX,CACLnB,MAAOgB,EAAQe,EAAI/B,MAAO+B,EAAI9B,KAAM8B,EAAIZ,WACxClB,KAAM,KACNkB,UAAW,MAIR,GAGU,QAAfa,EACED,EAAI9B,KACC,CAAEA,OAAQ,EAAIkC,WAAWJ,EAAI9B,OAAOuB,YAEzCO,EAAI/B,MACC,CAAEA,QAAS,EAAImC,WAAWJ,EAAI/B,QAAQwB,YAExC,GAOJO,EAAI9B,MAAS8B,EAAI/B,MAOjB+B,EAAI9B,KAKL8B,EAAIZ,UACC,CACLnB,MAAOgB,EAAQe,EAAI/B,MAAO+B,EAAI9B,KAAM8B,EAAIZ,WACxClB,KAAM,KACNkB,UAAWa,GAKR,CACLhC,MAAO+B,EAAI9B,KACXA,KAAM,KACNkB,UAAWa,GAhBJ,CAAEb,UAAWa,GAPb,GCtFX,IAmDeI,EAnDI,WACjB,IAAMC,EAAa,CAAErC,MAAO,KAAMC,KAAM,KAAMkB,UAAW,MADlC,EAEGmB,mBAASD,GAFZ,mBAEhBE,EAFgB,KAETC,EAFS,OAGGF,mBAAS,CAAEG,QAAQ,IAHtB,mBAGhBC,EAHgB,KAGTC,EAHS,KAKjBC,EAAc,SAACC,GAAD,OAAcL,GAAS,SAACM,GAAD,mBAAC,eAAsBA,GAAgBD,OAOlFE,qBAAU,WACR,GAAI,eAAgBL,EAAO,CACzBC,EAAS,CAAEF,QAAQ,IAEnB,IAAMO,EAASlB,EAAUS,EAAOG,EAAMO,YACtCL,EAAYI,MAEb,CAACN,IAEJ,IAAMnC,EAAc,SAACyB,GACnB,GAAIU,EAAMD,OAGR,OAFAE,EAAS,CAAEM,WAAYjB,SACvBQ,EAASH,GAIX,IAAIW,EACJ,IACEA,EAASlB,EAAUS,EAAOP,GAC1B,MAAOkB,GAvBTP,EAAS,CAAEF,QAAQ,IACnBD,EAAS,CAAExC,MAAO,0CAA4CC,KAAM,KAAMkB,UAAW,OAyBrFyB,EAAYI,IAGd,OACE,sBAAK5C,UAAU,uBAAf,UACE,cAAC,EAAD,CACEJ,MAAOuC,EAAMvC,MACbC,KAAMsC,EAAMtC,OAEd,cAAC,EAAD,CAAiBM,YAAaA,IAC9B,cAAC,EAAD,CAAQA,YAAaA,IACrB,cAAC,EAAD,CAAWA,YAAaA,IACxB,cAAC,EAAD,CAAOA,YAAaA,QC5CX4C,MARf,WACE,OACE,qBAAK/C,UAAU,MAAf,SACE,cAAC,EAAD,OCSSgD,EAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAEnB,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f547ff1f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst isNull = (prop) => {\n  if (!prop) {\n    return '0';\n  }\n  return prop;\n};\n\nconst current = (total, next) => {\n  if (total && next) {\n    return isNull(next);\n  }\n  if (total) {\n    return total;\n  }\n  return isNull(next);\n};\n\nconst Display = (props) => {\n  const { total, next } = props;\n\n  return (\n    <div className=\"Display-container\">\n      <p className=\"Display-display\">{ current(total, next) }</p>\n    </div>\n  );\n};\n\nDisplay.defaultProps = {\n  total: null,\n  next: null,\n};\n\nDisplay.propTypes = {\n  total: PropTypes.string,\n  next: PropTypes.string,\n};\n\nexport default Display;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst OtherOperations = (props) => {\n  const handleClick = (e) => {\n    const { handleClick } = props;\n    handleClick(e.target.value);\n  };\n\n  return (\n    <div className=\"Other-Operations-container\">\n      <button onClick={handleClick} type=\"button\" className=\"Other-Operations-btn btn\" value=\"AC\">AC</button>\n      <button onClick={handleClick} type=\"button\" className=\"Other-Operations-btn btn\" value=\"+/-\">+ / -</button>\n      <button onClick={handleClick} type=\"button\" className=\"Other-Operations-btn btn\" value=\"%\">%</button>\n    </div>\n  );\n};\n\nOtherOperations.propTypes = { handleClick: PropTypes.func };\n\nOtherOperations.defaultProps = { handleClick: null };\n\nexport default OtherOperations;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Digits = (props) => {\n  const handleClick = (e) => {\n    const { handleClick } = props;\n    handleClick(e.target.value);\n  };\n\n  return (\n    <div className=\"Digits-container\">\n      <button onClick={handleClick} type=\"button\" className=\"Digits-btn btn\" value=\"7\">7</button>\n      <button onClick={handleClick} type=\"button\" className=\"Digits-btn btn\" value=\"8\">8</button>\n      <button onClick={handleClick} type=\"button\" className=\"Digits-btn btn\" value=\"9\">9</button>\n      <button onClick={handleClick} type=\"button\" className=\"Digits-btn btn\" value=\"4\">4</button>\n      <button onClick={handleClick} type=\"button\" className=\"Digits-btn btn\" value=\"5\">5</button>\n      <button onClick={handleClick} type=\"button\" className=\"Digits-btn btn\" value=\"6\">6</button>\n      <button onClick={handleClick} type=\"button\" className=\"Digits-btn btn\" value=\"1\">1</button>\n      <button onClick={handleClick} type=\"button\" className=\"Digits-btn btn\" value=\"2\">2</button>\n      <button onClick={handleClick} type=\"button\" className=\"Digits-btn btn\" value=\"3\">3</button>\n      <button onClick={handleClick} type=\"button\" className=\"Digits-btn zero-btn btn\" value=\"0\">0</button>\n      <button onClick={handleClick} type=\"button\" className=\"Digits-btn btn\" value=\".\">.</button>\n    </div>\n  );\n};\n\nDigits.propTypes = { handleClick: PropTypes.func };\n\nDigits.defaultProps = { handleClick: null };\n\nexport default Digits;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Operators = (props) => {\n  const handleClick = (e) => {\n    const { handleClick } = props;\n    handleClick(e.target.value);\n  };\n\n  return (\n    <div className=\"Operators-container\">\n      <button onClick={handleClick} type=\"button\" className=\"Operators-btn btn\" value=\"÷\">÷</button>\n      <button onClick={handleClick} type=\"button\" className=\"Operators-btn btn\" value=\"x\">×</button>\n      <button onClick={handleClick} type=\"button\" className=\"Operators-btn btn\" value=\"-\">−</button>\n      <button onClick={handleClick} type=\"button\" className=\"Operators-btn btn\" value=\"+\">+</button>\n    </div>\n  );\n};\n\nOperators.propTypes = { handleClick: PropTypes.func };\n\nOperators.defaultProps = { handleClick: null };\n\nexport default Operators;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Equal = (props) => {\n  const handleClick = (e) => {\n    const { handleClick } = props;\n    handleClick(e.target.value);\n  };\n\n  return (\n    <div className=\"Equal-container\">\n      <button onClick={handleClick} type=\"button\" className=\"Equal-btn btn\" value=\"=\">=</button>\n    </div>\n  );\n};\n\nEqual.propTypes = { handleClick: PropTypes.func };\n\nEqual.defaultProps = { handleClick: null };\n\nexport default Equal;\n","import Big from 'big.js';\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne);\n  const two = Big(numberTwo);\n  if (operation === '+') {\n    return one.plus(two).toString();\n  }\n  if (operation === '-') {\n    return one.minus(two).toString();\n  }\n  if (operation === 'x') {\n    return one.times(two).toString();\n  }\n  if (operation === '÷') {\n    return one.div(two).toString();\n  }\n  if (operation === '%') {\n    return one.mod(two).toString();\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n","import operate from './operate';\n\nfunction isNumber(item) {\n  return !!item.match(/[0-9]+/);\n}\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:s      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === 'AC') {\n    return {\n      total: null,\n      next: null,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    if (buttonName === '0' && obj.next === '0') {\n      return {};\n    }\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return { next: obj.next + buttonName };\n      }\n      return { next: buttonName };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      return {\n        next: obj.next + buttonName,\n        total: null,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === '.') {\n    if (obj.next) {\n      if (obj.next.includes('.')) {\n        return {};\n      }\n      return { next: `${obj.next}.` };\n    }\n    if (obj.operation) {\n      return { next: '0.' };\n    }\n    if (obj.total) {\n      if (obj.total.includes('.')) {\n        return {};\n      }\n      return { total: `${obj.total}.` };\n    }\n    return { total: '0.' };\n  }\n\n  if (buttonName === '=') {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      };\n    }\n    // '=' with no operation, nothing to do\n    return {};\n  }\n\n  if (buttonName === '+/-') {\n    if (obj.next) {\n      return { next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  if (!obj.next && !obj.total) {\n    return {};\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n","import React, { useState, useEffect } from 'react';\nimport Display from './display';\nimport OtherOperations from './otherOperations';\nimport Digits from './digits';\nimport Operators from './operators';\nimport Equal from './equal';\nimport calculate from '../logic/calculate';\n\nconst Calculator = () => {\n  const initialObj = { total: null, next: null, operation: null };\n  const [state, setState] = useState(initialObj);\n  const [error, setError] = useState({ status: false });\n\n  const updateState = (newState) => setState((actualState) => ({ ...actualState, ...newState }));\n\n  const errorHandler = () => {\n    setError({ status: true });\n    setState({ total: 'Invalid operation: Can\\'t Divide by Zero', next: null, operation: null });\n  };\n\n  useEffect(() => {\n    if ('savedInput' in error) {\n      setError({ status: false });\n\n      const output = calculate(state, error.savedInput);\n      updateState(output);\n    }\n  }, [error]);\n\n  const handleClick = (buttonName) => {\n    if (error.status) {\n      setError({ savedInput: buttonName });\n      setState(initialObj);\n      return;\n    }\n\n    let output;\n    try {\n      output = calculate(state, buttonName);\n    } catch (err) {\n      errorHandler();\n    }\n    updateState(output);\n  };\n\n  return (\n    <div className=\"Calculator-container\">\n      <Display\n        total={state.total}\n        next={state.next}\n      />\n      <OtherOperations handleClick={handleClick} />\n      <Digits handleClick={handleClick} />\n      <Operators handleClick={handleClick} />\n      <Equal handleClick={handleClick} />\n    </div>\n  );\n};\n\nexport default Calculator;\n","import Calculator from './components/Calculator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/reset.css';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}