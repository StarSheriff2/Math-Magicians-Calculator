{"version":3,"sources":["components/display.js","components/otherOperations.js","components/digits.js","components/operators.js","components/equal.js","logic/operate.js","components/Calculator.js","logic/calculate.js","App.js","reportWebVitals.js","index.js"],"names":["isNull","prop","current","total","next","Display","props","state","this","className","React","Component","defaultProps","OtherOperations","handleClick","bind","e","target","value","onClick","type","Digits","Operators","Equal","operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","div","err","document","querySelector","textContent","mod","Error","Calculator","useState","setState","buttonName","newState","output","obj","match","includes","parseFloat","calculate","actualState","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.209ba9d4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst isNull = (prop) => {\n  if (!prop) {\n    return '0';\n  }\n  return prop;\n};\n\nconst current = (total, next) => {\n  if (total && next) {\n    return isNull(next);\n  }\n  if (total) {\n    return total;\n  }\n  return isNull(next);\n};\n\nexport default class Display extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { total } = this.props;\n    const { next } = this.props;\n\n    return (\n      <div className=\"Display-container\">\n        <p className=\"Display-display\">{ current(total, next) }</p>\n      </div>\n    );\n  }\n}\n\nDisplay.defaultProps = {\n  total: null,\n  next: null,\n};\n\nDisplay.propTypes = {\n  total: PropTypes.string,\n  next: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class OtherOperations extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {};\n  }\n\n  handleClick(e) {\n    const { handleClick } = this.props;\n    handleClick(e.target.value);\n  }\n\n  render() {\n    return (\n      <div className=\"Other-Operations-container\">\n        <button onClick={this.handleClick} type=\"button\" className=\"Other-Operations-btn btn\" value=\"AC\">AC</button>\n        <button onClick={this.handleClick} type=\"button\" className=\"Other-Operations-btn btn\" value=\"+/-\">+ / -</button>\n        <button onClick={this.handleClick} type=\"button\" className=\"Other-Operations-btn btn\" value=\"%\">%</button>\n      </div>\n    );\n  }\n}\n\nOtherOperations.propTypes = { handleClick: PropTypes.func };\n\nOtherOperations.defaultProps = { handleClick: null };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Digits extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {};\n  }\n\n  handleClick(e) {\n    const { handleClick } = this.props;\n    handleClick(e.target.value);\n  }\n\n  render() {\n    return (\n      <div className=\"Digits-container\">\n        <button onClick={this.handleClick} type=\"button\" className=\"Digits-btn btn\" value=\"7\">7</button>\n        <button onClick={this.handleClick} type=\"button\" className=\"Digits-btn btn\" value=\"8\">8</button>\n        <button onClick={this.handleClick} type=\"button\" className=\"Digits-btn btn\" value=\"9\">9</button>\n        <button onClick={this.handleClick} type=\"button\" className=\"Digits-btn btn\" value=\"4\">4</button>\n        <button onClick={this.handleClick} type=\"button\" className=\"Digits-btn btn\" value=\"5\">5</button>\n        <button onClick={this.handleClick} type=\"button\" className=\"Digits-btn btn\" value=\"6\">6</button>\n        <button onClick={this.handleClick} type=\"button\" className=\"Digits-btn btn\" value=\"1\">1</button>\n        <button onClick={this.handleClick} type=\"button\" className=\"Digits-btn btn\" value=\"2\">2</button>\n        <button onClick={this.handleClick} type=\"button\" className=\"Digits-btn btn\" value=\"3\">3</button>\n        <button onClick={this.handleClick} type=\"button\" className=\"Digits-btn zero-btn btn\" value=\"0\">0</button>\n        <button onClick={this.handleClick} type=\"button\" className=\"Digits-btn btn\" value=\".\">.</button>\n      </div>\n    );\n  }\n}\n\nDigits.propTypes = { handleClick: PropTypes.func };\n\nDigits.defaultProps = { handleClick: null };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Operators extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {};\n  }\n\n  handleClick(e) {\n    const { handleClick } = this.props;\n    handleClick(e.target.value);\n  }\n\n  render() {\n    return (\n      <div className=\"Operators-container\">\n        <button onClick={this.handleClick} type=\"button\" className=\"Operators-btn btn\" value=\"รท\">รท</button>\n        <button onClick={this.handleClick} type=\"button\" className=\"Operators-btn btn\" value=\"x\">ร</button>\n        <button onClick={this.handleClick} type=\"button\" className=\"Operators-btn btn\" value=\"-\">โ</button>\n        <button onClick={this.handleClick} type=\"button\" className=\"Operators-btn btn\" value=\"+\">+</button>\n      </div>\n    );\n  }\n}\n\nOperators.propTypes = { handleClick: PropTypes.func };\n\nOperators.defaultProps = { handleClick: null };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Equal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {};\n  }\n\n  handleClick(e) {\n    const { handleClick } = this.props;\n    handleClick(e.target.value);\n  }\n\n  render() {\n    return (\n      <div className=\"Equal-container\">\n        <button onClick={this.handleClick} type=\"button\" className=\"Equal-btn btn\" value=\"=\">=</button>\n      </div>\n    );\n  }\n}\n\nEqual.propTypes = { handleClick: PropTypes.func };\n\nEqual.defaultProps = { handleClick: null };\n","import Big from 'big.js';\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne);\n  const two = Big(numberTwo);\n  if (operation === '+') {\n    return one.plus(two).toString();\n  }\n  if (operation === '-') {\n    return one.minus(two).toString();\n  }\n  if (operation === 'x') {\n    return one.times(two).toString();\n  }\n  if (operation === 'รท') {\n    try {\n      return one.div(two).toString();\n    } catch (err) {\n      const display = document.querySelector('.Display-display');\n      display.textContent = 'Invalid Operation: Can\\'t divide by zero';\n      return null;\n    }\n  }\n  if (operation === '%') {\n    return one.mod(two).toString();\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n","import React, { useState } from 'react';\nimport Display from './display';\nimport OtherOperations from './otherOperations';\nimport Digits from './digits';\nimport Operators from './operators';\nimport Equal from './equal';\nimport calculate from '../logic/calculate';\n\nexport default function Calculator() {\n  const initialObj = { total: null, next: null, operation: null };\n  const [state, setState] = useState(initialObj);\n\n  const updateState = (newState) => setState((actualState) => ({ ...actualState, ...newState }));\n\n  const handleClick = (buttonName) => {\n    const output = calculate(state, buttonName);\n    updateState(output);\n  };\n\n  return (\n    <div className=\"Calculator-container\">\n      <Display\n        total={state.total}\n        next={state.next}\n      />\n      <OtherOperations handleClick={handleClick} />\n      <Digits handleClick={handleClick} />\n      <Operators handleClick={handleClick} />\n      <Equal handleClick={handleClick} />\n    </div>\n  );\n}\n","import operate from './operate';\n\nfunction isNumber(item) {\n  return !!item.match(/[0-9]+/);\n}\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:s      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === 'AC') {\n    return {\n      total: null,\n      next: null,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    if (buttonName === '0' && obj.next === '0') {\n      return {};\n    }\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return { next: obj.next + buttonName };\n      }\n      return { next: buttonName };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      return {\n        next: obj.next + buttonName,\n        total: null,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === '.') {\n    if (obj.next) {\n      if (obj.next.includes('.')) {\n        return {};\n      }\n      return { next: `${obj.next}.` };\n    }\n    if (obj.operation) {\n      return { next: '0.' };\n    }\n    if (obj.total) {\n      if (obj.total.includes('.')) {\n        return {};\n      }\n      return { total: `${obj.total}.` };\n    }\n    return { total: '0.' };\n  }\n\n  if (buttonName === '=') {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      };\n    }\n    // '=' with no operation, nothing to do\n    return {};\n  }\n\n  if (buttonName === '+/-') {\n    if (obj.next) {\n      return { next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  if (!obj.next && !obj.total) {\n    return {};\n  }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n","import Calculator from './components/Calculator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/reset.css';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}